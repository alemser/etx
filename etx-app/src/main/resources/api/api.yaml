openapi: "3.0.0"
info:
  version: 0.0.1
  title: Etx Coordination
  license:
    name: Apache
servers:
  - url: http://localhost:8080
paths:
  /coordinations:
    get:
      summary: List all coordinations
      operationId: listCoordinations
      tags:
        - coordinations
      parameters:
        - name: business_key
          in: query
          description: the business key to filter the coordinations
          required: false
          schema:
            type: string
#        - name: limit
#          in: query
#          description: How many items to return at one time (max 100)
#          required: false
#          schema:
#            type: integer
#            format: int32
      responses:
        '200':
          description: A paged array of coordinations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coordinations"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Starts a new coordination
      operationId: startCoordination
      tags:
        - coordinations
      responses:
        '201':
          description: Null response
          headers:
            Location:
              schema:
                $ref: "#/components/parameters/Location"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /coordinations/{coordinationId}:
    get:
      summary: Info for a specific coordination
      operationId: coordinationById
      tags:
        - coordinations
      parameters:
        - name: coordinationId
          in: path
          required: true
          description: The id of the coordination to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoordinationData"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    CoordinationData:
      properties:
        id:
          type: string
          readOnly: true
        create_time:
          type: string
          format: date-time
          example: 2019-01-01T00:00:01Z
        end_time:
          type: string
          format: date-time
          example: 2019-01-01T00:00:01Z
        timeout:
          type: string
          format: date-time
          example: 2019-01-01T00:00:01Z
        state:
          type: string
          enum:
            - CREATED
            - RUNNING
            - ENDED
            - ENDED_TIMEOUT
            - ENDED_CANCELLED
            - TIMEDOUT
            - INCONSISTENT
            - ROLLEDBACK
    CoordinationConfigData:
      properties:
        timeout:
          type: integer
          format: int32
        timeout_unit:
          type: string
          enum:
            - MILLIS
            - SECONDS
            - MINUTES
            - HOURS
    Coordinations:
      type: array
      items:
        $ref: "#/components/schemas/CoordinationData"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

  parameters:
    ETag:
      name: "Etag"
      description: "The RFC7232 ETag header field in a response provides the current\
        \ entity-\ntag for the selected resource. An entity-tag is an opaque identifier\
        \ for\ndifferent versions of a resource over time, regardless whether multiple\n\
        versions are valid at the same time. An entity-tag consists of an opaque\n\
        quoted string, possibly prefixed by a weakness indicator.\n"
      in: "header"
      schema:
        type: "string"
      required: false
      example: "7da7a728-f910-11e6-942a-68f728c1ba70"
    Location:
      name: "Location"
      description: "The Location header indicates the URL of a newly created resource\n"
      in: "header"
      schema:
        type: "string"
      example: "7da7a728-f910-11e6-942a-68f728c1ba70"